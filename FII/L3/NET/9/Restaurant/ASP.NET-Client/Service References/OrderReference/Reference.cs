//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP.NET_Client.OrderReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Restaurant.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KcalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ASP.NET_Client.OrderReference.Order[] OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kcal {
            get {
                return this.KcalField;
            }
            set {
                if ((this.KcalField.Equals(value) != true)) {
                    this.KcalField = value;
                    this.RaisePropertyChanged("Kcal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASP.NET_Client.OrderReference.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Restaurant.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ASP.NET_Client.OrderReference.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShipmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASP.NET_Client.OrderReference.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShipmentDate {
            get {
                return this.ShipmentDateField;
            }
            set {
                if ((this.ShipmentDateField.Equals(value) != true)) {
                    this.ShipmentDateField = value;
                    this.RaisePropertyChanged("ShipmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderReference.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateOrder", ReplyAction="http://tempuri.org/IOrderService/CreateOrderResponse")]
        int CreateOrder(System.DateTime date, System.DateTime shipmentDate, decimal totalPrice, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateOrder", ReplyAction="http://tempuri.org/IOrderService/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(System.DateTime date, System.DateTime shipmentDate, decimal totalPrice, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddProductToOrder", ReplyAction="http://tempuri.org/IOrderService/AddProductToOrderResponse")]
        void AddProductToOrder(int orderId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddProductToOrder", ReplyAction="http://tempuri.org/IOrderService/AddProductToOrderResponse")]
        System.Threading.Tasks.Task AddProductToOrderAsync(int orderId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CountOrders", ReplyAction="http://tempuri.org/IOrderService/CountOrdersResponse")]
        int CountOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CountOrders", ReplyAction="http://tempuri.org/IOrderService/CountOrdersResponse")]
        System.Threading.Tasks.Task<int> CountOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddProductsToOrder", ReplyAction="http://tempuri.org/IOrderService/AddProductsToOrderResponse")]
        void AddProductsToOrder(int orderId, ASP.NET_Client.OrderReference.Product[] products);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddProductsToOrder", ReplyAction="http://tempuri.org/IOrderService/AddProductsToOrderResponse")]
        System.Threading.Tasks.Task AddProductsToOrderAsync(int orderId, ASP.NET_Client.OrderReference.Product[] products);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CancelOrder", ReplyAction="http://tempuri.org/IOrderService/CancelOrderResponse")]
        void CancelOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CancelOrder", ReplyAction="http://tempuri.org/IOrderService/CancelOrderResponse")]
        System.Threading.Tasks.Task CancelOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        ASP.NET_Client.OrderReference.Order[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.OrderReference.Order[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrderTotalPrice", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderTotalPriceResponse")]
        void UpdateOrderTotalPrice(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrderTotalPrice", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderTotalPriceResponse")]
        System.Threading.Tasks.Task UpdateOrderTotalPriceAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DisplayOrder", ReplyAction="http://tempuri.org/IOrderService/DisplayOrderResponse")]
        string DisplayOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DisplayOrder", ReplyAction="http://tempuri.org/IOrderService/DisplayOrderResponse")]
        System.Threading.Tasks.Task<string> DisplayOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersByProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrdersByProductResponse")]
        ASP.NET_Client.OrderReference.Order[] GetOrdersByProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersByProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrdersByProductResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.OrderReference.Order[]> GetOrdersByProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        void UpdateOrder(ASP.NET_Client.OrderReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(ASP.NET_Client.OrderReference.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : ASP.NET_Client.OrderReference.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<ASP.NET_Client.OrderReference.IOrderService>, ASP.NET_Client.OrderReference.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrder(System.DateTime date, System.DateTime shipmentDate, decimal totalPrice, int customerId) {
            return base.Channel.CreateOrder(date, shipmentDate, totalPrice, customerId);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(System.DateTime date, System.DateTime shipmentDate, decimal totalPrice, int customerId) {
            return base.Channel.CreateOrderAsync(date, shipmentDate, totalPrice, customerId);
        }
        
        public void AddProductToOrder(int orderId, int productId, int quantity) {
            base.Channel.AddProductToOrder(orderId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task AddProductToOrderAsync(int orderId, int productId, int quantity) {
            return base.Channel.AddProductToOrderAsync(orderId, productId, quantity);
        }
        
        public int CountOrders() {
            return base.Channel.CountOrders();
        }
        
        public System.Threading.Tasks.Task<int> CountOrdersAsync() {
            return base.Channel.CountOrdersAsync();
        }
        
        public void AddProductsToOrder(int orderId, ASP.NET_Client.OrderReference.Product[] products) {
            base.Channel.AddProductsToOrder(orderId, products);
        }
        
        public System.Threading.Tasks.Task AddProductsToOrderAsync(int orderId, ASP.NET_Client.OrderReference.Product[] products) {
            return base.Channel.AddProductsToOrderAsync(orderId, products);
        }
        
        public void CancelOrder(int orderId) {
            base.Channel.CancelOrder(orderId);
        }
        
        public System.Threading.Tasks.Task CancelOrderAsync(int orderId) {
            return base.Channel.CancelOrderAsync(orderId);
        }
        
        public ASP.NET_Client.OrderReference.Order[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.OrderReference.Order[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public void UpdateOrderTotalPrice(int orderId) {
            base.Channel.UpdateOrderTotalPrice(orderId);
        }
        
        public System.Threading.Tasks.Task UpdateOrderTotalPriceAsync(int orderId) {
            return base.Channel.UpdateOrderTotalPriceAsync(orderId);
        }
        
        public string DisplayOrder(int orderId) {
            return base.Channel.DisplayOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<string> DisplayOrderAsync(int orderId) {
            return base.Channel.DisplayOrderAsync(orderId);
        }
        
        public ASP.NET_Client.OrderReference.Order[] GetOrdersByProduct(int productId) {
            return base.Channel.GetOrdersByProduct(productId);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.OrderReference.Order[]> GetOrdersByProductAsync(int productId) {
            return base.Channel.GetOrdersByProductAsync(productId);
        }
        
        public void UpdateOrder(ASP.NET_Client.OrderReference.Order order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(ASP.NET_Client.OrderReference.Order order) {
            return base.Channel.UpdateOrderAsync(order);
        }
    }
}

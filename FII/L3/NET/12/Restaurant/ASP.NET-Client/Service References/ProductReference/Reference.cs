//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP.NET_Client.ProductReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Restaurant.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KcalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ASP.NET_Client.ProductReference.Order[] OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kcal {
            get {
                return this.KcalField;
            }
            set {
                if ((this.KcalField.Equals(value) != true)) {
                    this.KcalField = value;
                    this.RaisePropertyChanged("Kcal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASP.NET_Client.ProductReference.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Restaurant.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ASP.NET_Client.ProductReference.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShipmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASP.NET_Client.ProductReference.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShipmentDate {
            get {
                return this.ShipmentDateField;
            }
            set {
                if ((this.ShipmentDateField.Equals(value) != true)) {
                    this.ShipmentDateField = value;
                    this.RaisePropertyChanged("ShipmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        ASP.NET_Client.ProductReference.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByName", ReplyAction="http://tempuri.org/IProductService/GetProductsByNameResponse")]
        ASP.NET_Client.ProductReference.Product[] GetProductsByName(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByName", ReplyAction="http://tempuri.org/IProductService/GetProductsByNameResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsByNameAsync(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByDescription", ReplyAction="http://tempuri.org/IProductService/GetProductsByDescriptionResponse")]
        ASP.NET_Client.ProductReference.Product[] GetProductsByDescription(string productDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByDescription", ReplyAction="http://tempuri.org/IProductService/GetProductsByDescriptionResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsByDescriptionAsync(string productDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsOfOrder", ReplyAction="http://tempuri.org/IProductService/GetProductsOfOrderResponse")]
        ASP.NET_Client.ProductReference.Product[] GetProductsOfOrder(int orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsOfOrder", ReplyAction="http://tempuri.org/IProductService/GetProductsOfOrderResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsOfOrderAsync(int orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetTopMostExpensiveProducts", ReplyAction="http://tempuri.org/IProductService/GetTopMostExpensiveProductsResponse")]
        ASP.NET_Client.ProductReference.Product[] GetTopMostExpensiveProducts(int nrOfProducts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetTopMostExpensiveProducts", ReplyAction="http://tempuri.org/IProductService/GetTopMostExpensiveProductsResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetTopMostExpensiveProductsAsync(int nrOfProducts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetTopMostExpensiveProductsUnderPrice", ReplyAction="http://tempuri.org/IProductService/GetTopMostExpensiveProductsUnderPriceResponse")]
        ASP.NET_Client.ProductReference.Product[] GetTopMostExpensiveProductsUnderPrice(int nrOfProducts, decimal maxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetTopMostExpensiveProductsUnderPrice", ReplyAction="http://tempuri.org/IProductService/GetTopMostExpensiveProductsUnderPriceResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetTopMostExpensiveProductsUnderPriceAsync(int nrOfProducts, decimal maxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/CreateProduct", ReplyAction="http://tempuri.org/IProductService/CreateProductResponse")]
        void CreateProduct(string name, string description, decimal price, int kcal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/CreateProduct", ReplyAction="http://tempuri.org/IProductService/CreateProductResponse")]
        System.Threading.Tasks.Task CreateProductAsync(string name, string description, decimal price, int kcal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        void DeleteProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/IncreaseProductPrice", ReplyAction="http://tempuri.org/IProductService/IncreaseProductPriceResponse")]
        void IncreaseProductPrice(int productId, decimal percent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/IncreaseProductPrice", ReplyAction="http://tempuri.org/IProductService/IncreaseProductPriceResponse")]
        System.Threading.Tasks.Task IncreaseProductPriceAsync(int productId, decimal percent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DescreaseProductPrice", ReplyAction="http://tempuri.org/IProductService/DescreaseProductPriceResponse")]
        void DescreaseProductPrice(int productId, decimal percent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DescreaseProductPrice", ReplyAction="http://tempuri.org/IProductService/DescreaseProductPriceResponse")]
        System.Threading.Tasks.Task DescreaseProductPriceAsync(int productId, decimal percent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ModifyProductDescription", ReplyAction="http://tempuri.org/IProductService/ModifyProductDescriptionResponse")]
        void ModifyProductDescription(int productId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ModifyProductDescription", ReplyAction="http://tempuri.org/IProductService/ModifyProductDescriptionResponse")]
        System.Threading.Tasks.Task ModifyProductDescriptionAsync(int productId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        ASP.NET_Client.ProductReference.Product GetProductById(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product> GetProductByIdAsync(int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ASP.NET_Client.ProductReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ASP.NET_Client.ProductReference.IProductService>, ASP.NET_Client.ProductReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetProductsByName(string productName) {
            return base.Channel.GetProductsByName(productName);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsByNameAsync(string productName) {
            return base.Channel.GetProductsByNameAsync(productName);
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetProductsByDescription(string productDescription) {
            return base.Channel.GetProductsByDescription(productDescription);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsByDescriptionAsync(string productDescription) {
            return base.Channel.GetProductsByDescriptionAsync(productDescription);
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetProductsOfOrder(int orderNumber) {
            return base.Channel.GetProductsOfOrder(orderNumber);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetProductsOfOrderAsync(int orderNumber) {
            return base.Channel.GetProductsOfOrderAsync(orderNumber);
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetTopMostExpensiveProducts(int nrOfProducts) {
            return base.Channel.GetTopMostExpensiveProducts(nrOfProducts);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetTopMostExpensiveProductsAsync(int nrOfProducts) {
            return base.Channel.GetTopMostExpensiveProductsAsync(nrOfProducts);
        }
        
        public ASP.NET_Client.ProductReference.Product[] GetTopMostExpensiveProductsUnderPrice(int nrOfProducts, decimal maxPrice) {
            return base.Channel.GetTopMostExpensiveProductsUnderPrice(nrOfProducts, maxPrice);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product[]> GetTopMostExpensiveProductsUnderPriceAsync(int nrOfProducts, decimal maxPrice) {
            return base.Channel.GetTopMostExpensiveProductsUnderPriceAsync(nrOfProducts, maxPrice);
        }
        
        public void CreateProduct(string name, string description, decimal price, int kcal) {
            base.Channel.CreateProduct(name, description, price, kcal);
        }
        
        public System.Threading.Tasks.Task CreateProductAsync(string name, string description, decimal price, int kcal) {
            return base.Channel.CreateProductAsync(name, description, price, kcal);
        }
        
        public void DeleteProduct(int productId) {
            base.Channel.DeleteProduct(productId);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int productId) {
            return base.Channel.DeleteProductAsync(productId);
        }
        
        public void IncreaseProductPrice(int productId, decimal percent) {
            base.Channel.IncreaseProductPrice(productId, percent);
        }
        
        public System.Threading.Tasks.Task IncreaseProductPriceAsync(int productId, decimal percent) {
            return base.Channel.IncreaseProductPriceAsync(productId, percent);
        }
        
        public void DescreaseProductPrice(int productId, decimal percent) {
            base.Channel.DescreaseProductPrice(productId, percent);
        }
        
        public System.Threading.Tasks.Task DescreaseProductPriceAsync(int productId, decimal percent) {
            return base.Channel.DescreaseProductPriceAsync(productId, percent);
        }
        
        public void ModifyProductDescription(int productId, string description) {
            base.Channel.ModifyProductDescription(productId, description);
        }
        
        public System.Threading.Tasks.Task ModifyProductDescriptionAsync(int productId, string description) {
            return base.Channel.ModifyProductDescriptionAsync(productId, description);
        }
        
        public ASP.NET_Client.ProductReference.Product GetProductById(int productId) {
            return base.Channel.GetProductById(productId);
        }
        
        public System.Threading.Tasks.Task<ASP.NET_Client.ProductReference.Product> GetProductByIdAsync(int productId) {
            return base.Channel.GetProductByIdAsync(productId);
        }
    }
}

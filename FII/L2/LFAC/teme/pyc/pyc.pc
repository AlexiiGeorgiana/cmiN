int $var1
int $var = 3
str $var2
const float $ct_var = 1.2
const int $a = 1
str $my_str = "ana are mere"

func int $functie()
    $var1 = 10
    $var1 = 12
    return 0
endfunc

func float $func3(int $a, float $b = 1, const str $c = "pere")
    int[] $myvar
    int[10] $myvar2
    int[][][][][10][100] $myvar3

    float[] $other = [1.1, 2.3, 4.5]
    float[2][2] $other2 = [[1, 2], [3, 4.5]]

    return $other2[1][1]
endfunc


const str[][2] $vec = [["a", "b"], ["c", "d"], ["e", 'f']]
str $value = $vec[1][1]


$functie()
$func3(1, 2.2, $c="mere")
float $ret = $func3($functie(), $func3(15), $c="mere")


obj $MyObj
    public: const int $tries = 3
    private: float $nr
    
    public:
        func bool $set_nr(float $new_nr)
            $nr = $new_nr
            return true
        endfunc

    public:
        func float $get_nr()
            return $nr
        endfunc
endobj

obj $CoolObj($MyObj)
    public: const bool $derived = true
    public:
        func bool $CoolObj(float $new_nr)
            $nr = $new_nr
            return false
        endfunc
endobj

object $CoolObj $my_obj
object $CoolObj $my_obj2 = object $CoolObj(10.10)

func object $CoolObj $gen_obj()
    return object $MyObj()
endfunc

object $CoolObj $ret_obj = $gen_obj()


if not 1 == 2 then
    $value = "mere"
elif (2 / 4) * 10 == 1 and 5 != 6 or $my_obj then
    $value = "pere"
else
    $value = "other"
endif

while 1
    $value = "any"
    break
endwhile

str $new_str = "1" + 'xyz' + "abc"
str $new_str2 = 2 * 3 * "1" * 44 * 50

print(23)
print((40))
print(10 + 20)
print((10 + 20) * 100 - (2 * 3))
